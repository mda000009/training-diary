openapi: 3.0.0
info:
  title: Training Diary API
  description: API for logging gym workouts.
  version: 1.0.0
  contact:
    name: API Support
    email: 0610809824@uma.es

paths:
  /createUser:
    post:
      summary: Create a new user
      description: This endpoint allows the creation of a new user in the system.
      operationId: createUser
      tags:
        - User management
      requestBody:
        description: User data to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User successfully created.
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                badRequest:
                  summary: Invalid request error
                  value:
                    status: "400"
                    error: "Bad Request"
                    message: "There are fields that do not comply with the specified format."
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                conflict:
                  summary: There are conflicts in some data
                  value:
                    status: "409"
                    error: "Conflict"
                    message: "There are conflicts in some fields."
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Internal Server Error
                  value:
                    status: "500"
                    error: "Internal Server Error"
                    message: "Internal Server Error."
        '503':
          description: Service Unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                serviceUnavailable:
                  summary: Service Unavailable
                  value:
                    status: "503"
                    error: "Service Unavailable"
                    message: "Service Unavailable."

  /createSessions:
    post:
      summary: Create a list of sessions
      description: This endpoint allows the creation of a list of sessions for a microcycle in the system.
      operationId: createSessions
      tags:
        - Session management
      requestBody:
        description: List of sessions to create, including the training variables.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessions:
                  type: array
                  items:
                    $ref: '#/components/schemas/Session'
                destinationEmail:
                  type: string
                  description: Personal trainer email.
                  example: 0610809824@uma.es
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Sessions successfully created.
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                badRequest:
                  summary: Invalid request error
                  value:
                    status: "400"
                    error: "Bad Request"
                    message: "There are fields that do not comply with the specified format."
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                unauthorized:
                  summary: Unauthorized
                  value:
                    status: "401"
                    error: "Unauthorized"
                    message: "Unauthorized to perform the operation."
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                badRequest:
                  summary: Conflict
                  value:
                    status: "409"
                    error: "Conflict"
                    message: "There are conflicts with some fields."
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Internal Server Error
                  value:
                    status: "500"
                    error: "Internal Server Error"
                    message: "Internal Server Error."
        '503':
          description: Service Unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                serviceUnavailable:
                  summary: Service Unavailable
                  value:
                    status: "503"
                    error: "Service Unavailable"
                    message: "Service Unavailable."
  /createExercises:
    post:
      summary: Create a list of exercises
      description: This endpoint allows the creation of a list of exercises.
      operationId: createExercises
      tags:
        - Exercise management
      requestBody:
        description: List of exercises to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exercises:
                  type: array
                  items:
                    $ref: '#/components/schemas/Exercise'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Exercises successfully created.
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                badRequest:
                  summary: Invalid request error
                  value:
                    status: "400"
                    error: "Bad Request"
                    message: "There are fields that do not comply with the specified format."
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                unauthorized:
                  summary: Unauthorized
                  value:
                    status: "401"
                    error: "Unauthorized"
                    message: "Unauthorized to perform the operation."
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                badRequest:
                  summary: Conflict
                  value:
                    status: "409"
                    error: "Conflict"
                    message: "There are conflicts with some fields."
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Internal Server Error
                  value:
                    status: "500"
                    error: "Internal Server Error"
                    message: "Internal Server Error."
        '503':
          description: Service Unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                serviceUnavailable:
                  summary: Service Unavailable
                  value:
                    status: "503"
                    error: "Service Unavailable"
                    message: "Service Unavailable."

  /getUser:
    get:
      summary: Get the user information
      description: This endpoint allows to get the user information
      operationId: getUser
      tags:
        - User management
      responses:
        '200':
          description: User information successfully obtained.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                unauthorized:
                  summary: Unauthorized
                  value:
                    status: "401"
                    error: "Unauthorized"
                    message: "Unauthorized to perform the operation."
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                badRequest:
                  summary: User not found
                  value:
                    status: "404"
                    error: "Not Found"
                    message: "User not found."
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Internal Server Error
                  value:
                    status: "500"
                    error: "Internal Server Error"
                    message: "Internal Server Error."
        '503':
          description: Service Unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                serviceUnavailable:
                  summary: Service Unavailable
                  value:
                    status: "503"
                    error: "Service Unavailable"
                    message: "Service Unavailable."

  /getSession/{sessionId}:
    get:
      summary: Get the session information
      description: This endpoint allows to get the session information
      operationId: getSession
      tags:
        - Session management
      parameters:
        - name: sessionId
          in: path
          description: Unique ID of the session.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Session information successfully obtained.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSession'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                badRequest:
                  summary: Invalid request error
                  value:
                    status: "400"
                    error: "Bad Request"
                    message: "There are fields that do not comply with the specified format."
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                unauthorized:
                  summary: Unauthorized
                  value:
                    status: "401"
                    error: "Unauthorized"
                    message: "Unauthorized to perform the operation."
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                badRequest:
                  summary: Field sessionId not found
                  value:
                    status: "404"
                    error: "Not Found"
                    message: "Field sessionId not found."
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Internal Server Error
                  value:
                    status: "500"
                    error: "Internal Server Error"
                    message: "Internal Server Error."
        '503':
          description: Service Unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                serviceUnavailable:
                  summary: Service Unavailable
                  value:
                    status: "503"
                    error: "Service Unavailable"
                    message: "Service Unavailable."

  /getExercise/{exerciseId}:
    get:
      summary: Get the exercise information
      description: This endpoint allows to get the exercise information
      operationId: getExercise
      tags:
        - Exercise management
      parameters:
        - name: exerciseId
          in: path
          description: Unique ID of the exercise.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Exercise information successfully obtained.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExercise'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                badRequest:
                  summary: Invalid request error
                  value:
                    status: "400"
                    error: "Bad Request"
                    message: "There are fields that do not comply with the specified format."
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                unauthorized:
                  summary: Unauthorized
                  value:
                    status: "401"
                    error: "Unauthorized"
                    message: "Unauthorized to perform the operation."
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                badRequest:
                  summary: Field exerciseId not found
                  value:
                    status: "404"
                    error: "Not Found"
                    message: "Field exerciseId not found."
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Internal Server Error
                  value:
                    status: "500"
                    error: "Internal Server Error"
                    message: "Internal Server Error."
        '503':
          description: Service Unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                serviceUnavailable:
                  summary: Service Unavailable
                  value:
                    status: "503"
                    error: "Service Unavailable"
                    message: "Service Unavailable."

components:
  schemas:
    User:
      type: object
      properties:
        firstName:
          type: string
          description: User's first name.
          example: Juan
        lastName:
          type: string
          description: User's last name.
          example: Pérez
        username:
          type: string
          description: Unique username.
          example: juanperez
        password:
          type: string
          description: User's password.
          example: mySecurePass123
        birthday:
          type: string
          format: date
          description: User's birth date.
          example: '1990-05-25'
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
        gender:
          type: string
          enum:
            - Male
            - Female
            - Another
          description: User's gender.
          example: Male
        email:
          type: string
          format: email
          description: User's email address.
          example: juan.perez@example.com
        phoneNumber:
          type: string
          description: User's phone number.
          example: '1234567890'
      required:
        - firstName
        - lastName
        - username
        - password
        - birthday
        - gender
        - email

    GetUser:
      type: object
      properties:
        firstName:
          type: string
          description: User's first name.
          example: Juan
        lastName:
          type: string
          description: User's last name.
          example: Pérez
        username:
          type: string
          description: Unique username.
          example: juanperez
        birthday:
          type: string
          format: date
          description: User's birth date.
          example: '1990-05-25'
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
        gender:
          type: string
          enum:
            - Male
            - Female
            - Another
          description: User's gender.
          example: Male
        email:
          type: string
          format: email
          description: User's email address.
          example: juan.perez@example.com
        phoneNumber:
          type: string
          description: User's phone number.
          example: '1234567890'
        creationDate:
          type: string
          format: date
          example: "2024-06-25"

    Session:
      type: object
      properties:
        username:
          type: string
          description: Unique username.
          example: juanperez
        sessionId:
          type: integer
          description: Unique ID of the session.
          example: 1
        sessionName:
          type: string
          description: Name of the session.
          example: "Session 1"
        sessionDate:
          type: string
          format: date
          description: Date of the session.
          example: "2024-06-25"
        training_variables:
          type: array
          items:
            $ref: '#/components/schemas/TrainingVariable'
      required:
        - username
        - sessionId
        - sessionName

    TrainingVariable:
      type: object
      properties:
        setNumber:
          type: integer
          description: Set number of the training session.
          example: 1
        exerciseId:
          type: integer
          description: ID of the exercise performed in the set.
          example: 1
        weight:
          type: number
          format: float
          description: Weight used in the set (in kilograms).
          example: 20
        repetitions:
          type: integer
          description: Number of repetitions performed in the set.
          example: 10
        rir:
          type: integer
          description: Repetitions in reserve (RIR).
          example: 1
      required:
        - setNumber
        - exerciseId
        - weight
        - repetitions

    Exercise:
      type: object
      properties:
        exerciseId:
          type: integer
          description: Unique ID of the exercise.
          example: 1
        exerciseName:
          type: string
          description: Name of the exercise.
          example: "Bench Press"
      required:
        - exerciseId
        - exerciseName

    GetExercise:
      type: object
      properties:
        exerciseName:
          type: string
          description: Name of the exercise.
          example: "Bench Press"

    GetSession:
      type: object
      properties:
        username:
          type: string
          description: Unique username.
          example: juanperez
        sessionName:
          type: string
          example: "Sesion 1"
        sessionDate:
          type: string
          format: date
          example: "2024-06-25"
        training_variables:
          type: array
          items:
            $ref: '#/components/schemas/TrainingVariable'

    Error:
      type: object
      properties:
        status:
          type: string
          description: HTTP status code of the error.
          example: "400"
        error:
          type: string
          description: Description of the error type.
          example: "Bad Request"
        message:
          type: string
          description: Detailed error message.
          example: "Mandatory fields are missing or the data is invalid"
      required:
        - status
        - error